/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Customer;

import business.Customer.Customer;
import business.EcoSystem;
import business.Enterprise.Enterprise;
import business.Enterprise.FinancialEnterprise;
import business.Enterprise.GovernmentEnterprise;
import business.Investment.InvestmentItem;
import business.Network.Network;
import business.Organisation.InvestmentAndRiskOrganization;
import business.Organisation.Organisation;
import business.Stock.Stock;
import business.Useraccount.UserAccount;
import business.Utilities;
import business.WorkQueue.InvestmentWorkRequest;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import javax.swing.DefaultCellEditor;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Prashant Kabra (kabra.p@husky.neu.edu)
 */
public class FuturInvestmentJPanel extends javax.swing.JPanel {

    /**
     * Creates new form FuturInvestmentJPanel
     */
    private UserAccount account;
    private EcoSystem ecosystem;
    private JPanel futureContainer;
    DefaultTableModel model;

    public FuturInvestmentJPanel(JPanel futureContainer, EcoSystem ecosystem, UserAccount account) {
        initComponents();
        this.futureContainer = futureContainer;
        this.account = account;
        this.ecosystem = ecosystem;
        model = (DefaultTableModel) tblFutureInv.getModel();

        TableColumnModel tcm = tblFutureInv.getColumnModel();
        tcm.getColumn(4).setCellEditor(new DefaultCellEditor(Utilities.createFormattedTextField()));
        populateTable();

        networkCombo.setEditable(false);
        enterpriseCombo.setEditable(false);

        networkCombo.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                populateEnterpriseCombo((Network) networkCombo.getSelectedItem());

            }
        });
        populateNetworkCombo();
        networkCombo.setSelectedIndex(0);
        model.fireTableDataChanged();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblFutureInv.getModel();

        model.setRowCount(0);
        Customer c = (Customer) account.getPerson();

        for (InvestmentItem item : c.getFutureInvestment().getInvestmentList()) {
            Object[] row = new Object[6];
            Stock s = item.getStock();
            row[0] = s.getStockId();
            row[1] = s;
            row[2] = s.getRisk().name();
            row[3] = item.getQuantity();
            double price = s.getStockHistoryList().get(0).getPrice();
            row[4] = price;
            row[5] = s.getNetwork().getCountry().getValue();
            model.addRow(row);
        }

    }

    private void populateNetworkCombo() {
        for (Network n : ecosystem.getNetworkDirectory().getNetworkList()) {
            networkCombo.addItem(n);
        }
    }

    private void populateEnterpriseCombo(Network n) {
        enterpriseCombo.removeAllItems();
        for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
            if (e instanceof FinancialEnterprise) {
                enterpriseCombo.addItem(e);
            }
        }

    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel26 = new javax.swing.JLabel();
        networkCombo = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        enterpriseCombo = new javax.swing.JComboBox<>();
        btnRequestInvestment = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblFutureInv = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 153, 0));
        jLabel26.setText("Networks");

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 153, 0));
        jLabel27.setText("Enterprise");

        btnRequestInvestment.setBackground(new java.awt.Color(0, 153, 153));
        btnRequestInvestment.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnRequestInvestment.setForeground(new java.awt.Color(255, 255, 255));
        btnRequestInvestment.setText("Request Investment");
        btnRequestInvestment.setMaximumSize(new java.awt.Dimension(200, 200));
        btnRequestInvestment.setMinimumSize(new java.awt.Dimension(200, 200));
        btnRequestInvestment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestInvestmentActionPerformed(evt);
            }
        });

        btnRemove.setBackground(new java.awt.Color(0, 153, 153));
        btnRemove.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnRemove.setForeground(new java.awt.Color(255, 255, 255));
        btnRemove.setText("Remove");
        btnRemove.setMaximumSize(new java.awt.Dimension(200, 200));
        btnRemove.setMinimumSize(new java.awt.Dimension(200, 200));
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 153, 0));
        jLabel25.setText("Future Investment Items");

        tblFutureInv.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "StockId", "StockName", "Risk", "Quantity", "Present Price", "Currency"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblFutureInv.setRowHeight(20);
        jScrollPane4.setViewportView(tblFutureInv);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel27)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(enterpriseCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(networkCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 784, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRequestInvestment, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(121, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(networkCombo))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterpriseCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRequestInvestment, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRequestInvestmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestInvestmentActionPerformed
        // TODO add your handling code here:

        if (checkQuatity()) {
            Customer c = (Customer) account.getPerson();

            int i = 0;
            for (InvestmentItem item : c.getFutureInvestment().getInvestmentList()) {
                item.setQuantity((Integer) tblFutureInv.getValueAt(i, 3));
            }
            InvestmentWorkRequest iwr = new InvestmentWorkRequest(0);
            iwr.setStatus("Requested");
            iwr.setInvestment(c.getFutureInvestment());
            Enterprise e = (Enterprise) enterpriseCombo.getSelectedItem();
            c.getWorkQueue().addWorkRequest(iwr);
            for (Organisation o : e.getOrganisationDirectory().getOrganisationList()) {
                if (o instanceof InvestmentAndRiskOrganization) {
                    o.getWorkQueue().getWorkRequestList().add(iwr);
                    iwr.setOrganisation(o);
                }
            }
            c.getFutureInvestment().getInvestmentList().clear();
            JOptionPane.showMessageDialog(null, "Request has been sent");
        } else {
            JOptionPane.showMessageDialog(null, "Enter quantity for every stock or remove them");
        }

    }//GEN-LAST:event_btnRequestInvestmentActionPerformed

    private boolean checkQuatity() {

        for (int i = 0; i < tblFutureInv.getRowCount(); i++) {
            if ((int) tblFutureInv.getValueAt(i, 3) <= 0) {
                return false;
            }
        }
        return true;
    }
    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        int selectedrow = tblFutureInv.getSelectedRow();
        if (selectedrow < 0) {
            JOptionPane.showMessageDialog(null, "Select a row first");
        } else {
            Customer c = (Customer) account.getPerson();
            Stock s = (Stock) tblFutureInv.getValueAt(selectedrow, 1);

            for (InvestmentItem item : c.getFutureInvestment().getInvestmentList()) {
                if (item.getStock().equals(s)) {
                    c.getFutureInvestment().getInvestmentList().remove(item);
                    break;
                }
            }
            populateTable();

        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnRequestInvestment;
    private javax.swing.JComboBox<Enterprise> enterpriseCombo;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JComboBox<Network> networkCombo;
    private javax.swing.JTable tblFutureInv;
    // End of variables declaration//GEN-END:variables
}
