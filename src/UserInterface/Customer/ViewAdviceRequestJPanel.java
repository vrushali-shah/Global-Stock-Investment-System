/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Customer;

import business.Customer.Customer;
import business.Investment.InvestmentItem;
import business.Stock.Stock;
import business.Useraccount.UserAccount;
import business.Utilities;
import business.WorkQueue.AdviceWorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vrushali Shah
 */
public class ViewAdviceRequestJPanel extends javax.swing.JPanel {

    private JPanel viewReqInvContainer;

    /**
     * Creates new form ViewRequestInvestmentJPanel
     */
    private AdviceWorkRequest awr;
    private UserAccount account;

    public ViewAdviceRequestJPanel(JPanel viewReqInvContainer, AdviceWorkRequest awr) {
        initComponents();
        this.viewReqInvContainer = viewReqInvContainer;
        this.awr = awr;
        account = awr.getSender();
        populateSuggestedTable();
        populateFutureTable();
        btnSave.setVisible(true);
    }

    public void populateSuggestedTable() {
        DefaultTableModel model = (DefaultTableModel) tblSuggested.getModel();

        model.setRowCount(0);
        for (Stock s : awr.getStockList()) {
            Object[] row = new Object[5];

            row[0] = s.getStockId();
            row[1] = s;
            row[2] = s.getRisk().name();
            double price = Utilities.currentPrice(s);
            if (price == -1) {
                price = s.getStockHistoryList().get(0).getPrice();
            }
            row[3] = price;
            row[4] = s.getNetwork().getCountry().getValue();
            model.addRow(row);
        }

    }

    public void populateFutureTable() {
        DefaultTableModel model = (DefaultTableModel) tblFutureInv.getModel();

        model.setRowCount(0);
        Customer c = (Customer) account.getPerson();

        for (InvestmentItem item : c.getFutureInvestment().getInvestmentList()) {
            Object[] row = new Object[5];
            Stock s = item.getStock();
            row[0] = s.getStockId();
            row[1] = s;
            row[2] = s.getRisk().name();
            double price = Utilities.currentPrice(s);
            if (price == -1) {
                price = s.getStockHistoryList().get(0).getPrice();
            }
            row[3] = price;
            row[4] = s.getNetwork().getCountry().getValue();
            model.addRow(row);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel22 = new javax.swing.JLabel();
        btnView = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblSuggested = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblFutureInv = new javax.swing.JTable();
        btnBack1 = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 153, 0));
        jLabel22.setText("Future Investment Items");

        btnView.setBackground(new java.awt.Color(0, 153, 153));
        btnView.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnView.setForeground(new java.awt.Color(255, 255, 255));
        btnView.setText("Add to Investment");
        btnView.setMaximumSize(new java.awt.Dimension(200, 200));
        btnView.setMinimumSize(new java.awt.Dimension(200, 200));
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        jLabel21.setBackground(new java.awt.Color(255, 255, 255));
        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 153, 0));
        jLabel21.setText("Suggested Investment Items");

        tblSuggested.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "StockId", "StockName", "Risk", "Present Price", "Currency"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSuggested.setRowHeight(20);
        jScrollPane4.setViewportView(tblSuggested);

        tblFutureInv.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "StockId", "StockName", "Risk", "Present Price", "Currency"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblFutureInv.setRowHeight(20);
        jScrollPane5.setViewportView(tblFutureInv);

        btnBack1.setBackground(new java.awt.Color(0, 153, 153));
        btnBack1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnBack1.setForeground(new java.awt.Color(255, 255, 255));
        btnBack1.setText("<<");
        btnBack1.setMaximumSize(new java.awt.Dimension(200, 200));
        btnBack1.setMinimumSize(new java.awt.Dimension(200, 200));
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(0, 153, 153));
        btnSave.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Save");
        btnSave.setMaximumSize(new java.awt.Dimension(200, 200));
        btnSave.setMinimumSize(new java.awt.Dimension(200, 200));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnBack1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 849, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 853, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel21)
                .addGap(23, 23, 23)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabel22)
                        .addGap(29, 29, 29))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblSuggested.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a stock to add first", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            if (!alreadyPresent((Stock) tblSuggested.getValueAt(selectedRow, 1))) {
                DefaultTableModel model = (DefaultTableModel) tblFutureInv.getModel();
                Object[] row = new Object[5];
                for (int i = 0; i < 5; i++) {
                    row[i] = tblSuggested.getValueAt(selectedRow, i);
                }
                model.addRow(row);
            } else {
                JOptionPane.showMessageDialog(null, "Stock alreay in future investment list", "Information", JOptionPane.INFORMATION_MESSAGE);

            }

        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        // TODO add your handling code here:
        viewReqInvContainer.remove(this);
        CardLayout layout = (CardLayout) viewReqInvContainer.getLayout();
        layout.previous(viewReqInvContainer);
    }//GEN-LAST:event_btnBack1ActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        Customer c = (Customer) account.getPerson();
        c.getFutureInvestment().getInvestmentList().clear();
        for (int i = 0; i < tblFutureInv.getRowCount(); i++) {
            InvestmentItem item = new InvestmentItem();
            item.setStock((Stock) tblFutureInv.getValueAt(i, 1));
            c.getFutureInvestment().addInvestmentItem(item);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private boolean alreadyPresent(Stock s) {
        for (int i = 0; i < tblFutureInv.getRowCount(); i++) {
            if (((Stock) tblFutureInv.getValueAt(i, 1)).equals(s)) {
                return true;
            }
        }
        return false;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable tblFutureInv;
    private javax.swing.JTable tblSuggested;
    // End of variables declaration//GEN-END:variables
}
