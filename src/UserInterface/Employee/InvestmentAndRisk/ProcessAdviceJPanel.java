/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Employee.InvestmentAndRisk;

import business.Network.Network;
import business.Stock.Stock;
import business.WorkQueue.AdviceWorkRequest;
import java.awt.CardLayout;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vrushali Shah
 */
public class ProcessAdviceJPanel extends javax.swing.JPanel {

    private JPanel adviceCustContainer;
    private AdviceWorkRequest awr;

    /**
     * Creates new form CustomerWorkAreaJPanel
     */
    public ProcessAdviceJPanel(JPanel adviceCustContainer, AdviceWorkRequest awr) {
        initComponents();
        this.adviceCustContainer = adviceCustContainer;
        this.awr = awr;

        if (awr.getStatus().equals("Completed")) {
            btnAdd.setEnabled(false);
            btnAdvice.setEnabled(false);
            btnRemove.setEnabled(false);
            stockCombo.setEnabled(false);
            networkCombo.setEnabled(false);
            populateTable();
        } else {

            networkCombo.addItemListener(new ItemListener() {
                @Override
                public void itemStateChanged(ItemEvent e) {
                    populateStockCombo((Network) networkCombo.getSelectedItem());

                }
            });
            populateNetworkCombo();
            networkCombo.setSelectedIndex(0);
        }

    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblInvestment.getModel();

        model.setRowCount(0);
        for (Stock s : awr.getStockList()) {

            Object[] row = new Object[2];
            row[0] = s.getStockId();
            row[1] = s;

            model.addRow(row);

        }
    }

    private void populateNetworkCombo() {
        for (Network n : awr.getNetworks()) {
            networkCombo.addItem(n);
        }
    }

    private void populateStockCombo(Network n) {
        stockCombo.removeAllItems();
        for (Stock s : n.getStockCatalog().getStockList()) {
            stockCombo.addItem(s);
        }
        removeAlreadyAdded();
    }

    private void removeAlreadyAdded() {

        for (int i = 0; i < tblInvestment.getRowCount(); i++) {
            stockCombo.removeItem((Stock) tblInvestment.getValueAt(i, 0));
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        networkCombo = new javax.swing.JComboBox<>();
        stockCombo = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblInvestment = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnAdvice = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        tblInvestment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Stock Name", "Stock ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblInvestment);

        btnBack.setBackground(new java.awt.Color(0, 153, 153));
        btnBack.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("<<");
        btnBack.setMaximumSize(new java.awt.Dimension(200, 200));
        btnBack.setMinimumSize(new java.awt.Dimension(200, 200));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(0, 153, 153));
        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Add");
        btnAdd.setMaximumSize(new java.awt.Dimension(200, 200));
        btnAdd.setMinimumSize(new java.awt.Dimension(200, 200));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnAdvice.setBackground(new java.awt.Color(0, 153, 153));
        btnAdvice.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnAdvice.setForeground(new java.awt.Color(255, 255, 255));
        btnAdvice.setText("Send Advice");
        btnAdvice.setMaximumSize(new java.awt.Dimension(200, 200));
        btnAdvice.setMinimumSize(new java.awt.Dimension(200, 200));
        btnAdvice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdviceActionPerformed(evt);
            }
        });

        btnRemove.setBackground(new java.awt.Color(0, 153, 153));
        btnRemove.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnRemove.setForeground(new java.awt.Color(255, 255, 255));
        btnRemove.setText("Remove");
        btnRemove.setMaximumSize(new java.awt.Dimension(200, 200));
        btnRemove.setMinimumSize(new java.awt.Dimension(200, 200));
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 153, 0));
        jLabel6.setText("Network");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 153, 0));
        jLabel7.setText("Stock");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(networkCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(stockCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 376, Short.MAX_VALUE)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 883, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(51, 51, 51)
                            .addComponent(btnAdvice, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(197, 197, 197))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(173, 173, 173)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(networkCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stockCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdvice, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(373, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        goBack();
    }//GEN-LAST:event_btnBackActionPerformed
private void goBack(){
      adviceCustContainer.remove(this);
        AdviceCustomerJPanel ac = (AdviceCustomerJPanel) adviceCustContainer.getComponent(adviceCustContainer.getComponentCount() - 1);
        ac.populateTable();
        CardLayout layout = (CardLayout) adviceCustContainer.getLayout();
        layout.previous(adviceCustContainer);
}
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblInvestment.getModel();

        Stock s = (Stock) stockCombo.getSelectedItem();

        Object[] row = new Object[2];
        row[0] = s;
        row[1] = s.getStockId();

        model.addRow(row);
        stockCombo.removeItem(s);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnAdviceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdviceActionPerformed
        // TODO add your handling code here:
          awr.setStatus("Completed");
        awr.setResolveDate(new Date());
        for (int i = 0; i < tblInvestment.getRowCount(); i++) {
            awr.getStockList().add((Stock) tblInvestment.getValueAt(i, 0));
        }
        goBack();
    }//GEN-LAST:event_btnAdviceActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblInvestment.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Select a stock to remove first");
        } else {

            int modelIndex = tblInvestment.convertRowIndexToModel(selectedRow); // converts the row index in the view to the appropriate index in the model
            DefaultTableModel model = (DefaultTableModel) tblInvestment.getModel();
            model.removeRow(modelIndex);
       networkCombo.setSelectedIndex(0);
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAdvice;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRemove;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<Network> networkCombo;
    private javax.swing.JComboBox<Stock> stockCombo;
    private javax.swing.JTable tblInvestment;
    // End of variables declaration//GEN-END:variables
}
