/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Expert;

import business.Customer.Customer;
import business.Customer.CustomerDirectory;
import business.Employee.Employee;
import business.Enterprise.Enterprise;
import business.Network.Network;
import business.Organisation.Organisation;
import business.Useraccount.UserAccount;
import business.WorkQueue.AdviceWorkRequest;
import business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vrushali Shah
 */
public class AdviceCustomerFromExpertJPanel extends javax.swing.JPanel {

    private JPanel adviceCustContainer;
    private CustomerDirectory customerDir;
    private Enterprise enterprise;
    private Organisation organisation;
    private UserAccount account;
    private Network network;

    /**
     * Creates new form ServeCustomerJPanel
     */
    public AdviceCustomerFromExpertJPanel(JPanel adviceCustContainer, CustomerDirectory customerDir, Organisation organisation, UserAccount account) {
        initComponents();
        this.adviceCustContainer = adviceCustContainer;
        this.customerDir = customerDir;
        this.organisation = organisation;
        enterprise = organisation.getInEnterprise();
        this.account = account;
        network = organisation.getInEnterprise().getInNetwork();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCustomer = new javax.swing.JTable();
        btnAssign = new javax.swing.JButton();
        btnServeCustomer = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        tblCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RequestId", "Risk", "CustomerID", "Request Date", "Receiver", "Resolve Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCustomer);

        btnAssign.setBackground(new java.awt.Color(0, 153, 153));
        btnAssign.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnAssign.setForeground(new java.awt.Color(255, 255, 255));
        btnAssign.setText("Assign to me");
        btnAssign.setMaximumSize(new java.awt.Dimension(200, 200));
        btnAssign.setMinimumSize(new java.awt.Dimension(200, 200));
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        btnServeCustomer.setBackground(new java.awt.Color(0, 153, 153));
        btnServeCustomer.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnServeCustomer.setForeground(new java.awt.Color(255, 255, 255));
        btnServeCustomer.setText("Advice Customer");
        btnServeCustomer.setMaximumSize(new java.awt.Dimension(200, 200));
        btnServeCustomer.setMinimumSize(new java.awt.Dimension(200, 200));
        btnServeCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnServeCustomerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 764, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAssign, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnServeCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(215, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAssign, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnServeCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(290, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblCustomer.getModel();

       SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        model.setRowCount(0);
        for (WorkRequest wr : organisation.getWorkQueue().getWorkRequestList()) {
            if (wr instanceof AdviceWorkRequest && (wr.getReceiver() == null || wr.getReceiver() == account)) {
                AdviceWorkRequest awr = (AdviceWorkRequest) wr;
                Object[] row = new Object[6];
                row[0] = awr.getId();
                row[1] = awr;
                row[2] = (Customer) awr.getSender().getPerson();
                row[3] = sdf.format(awr.getRequestDate());
                UserAccount r = awr.getReceiver();
                row[4] = r != null ? r: "";
                row[5]=awr.getResolveDate() != null ?  sdf.format(awr.getResolveDate()): "";
                model.addRow(row);
            }
        }
    }

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCustomer.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Select a request first");
        } else {
            AdviceWorkRequest awr = (AdviceWorkRequest) tblCustomer.getValueAt(selectedRow, 1);
            awr.setReceiver(account);
            populateTable();
        }
    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnServeCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnServeCustomerActionPerformed

        int selectedRow = tblCustomer.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select the row from table to view details", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            AdviceWorkRequest awr = (AdviceWorkRequest) tblCustomer.getValueAt(selectedRow, 1);
            if (awr.getReceiver() == null) {
                int reply = JOptionPane.showConfirmDialog(null, "Do you want to assign this request to yourself and procced?", "Question", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (reply == 0) {
                    awr.setReceiver(account);
                } else {
                    return;
                }
            }
            ProcessAdviceJPanel panel = new ProcessAdviceJPanel(adviceCustContainer, awr, network);
            adviceCustContainer.add("ProcessAdviceJPanel", panel);
            CardLayout cardLayout = (CardLayout) adviceCustContainer.getLayout();
            cardLayout.next(adviceCustContainer);

        }

    }//GEN-LAST:event_btnServeCustomerActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnServeCustomer;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCustomer;
    // End of variables declaration//GEN-END:variables
}
