/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Expert;

import business.Customer.Customer;
import business.Expert.SpeakerSession;
import business.Utilities;
import com.github.lgooddatepicker.components.DatePickerSettings;
import com.github.lgooddatepicker.components.TimePicker;
import com.github.lgooddatepicker.components.TimePickerSettings;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Vrushali Shah
 */
public class ManageSpeakerSessionJPanel extends javax.swing.JPanel {

    private JPanel speakerSessionContainer;
    private SpeakerSession session;

    /**
     * Creates new form ManageSpeakerSessionJPanel
     */
    TimePickerSettings timePickerSettings = new TimePickerSettings();
    SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");

    public ManageSpeakerSessionJPanel(JPanel speakerSessionContainer, SpeakerSession session) {
        initComponents();
        this.speakerSessionContainer = speakerSessionContainer;
        this.session = session;
        txtId.setText(String.valueOf(session.getId()));
        txtId.setEditable(false);
        populateFields();
        btnSave.setEnabled(false);
        btnUpdate.setEnabled(true);
        state(false);
//        DatePickerSettings datePickerSetting = new DatePickerSettings();
//        datePickerSetting.setAllowEmptyDates(false);
//        datePickerSetting.setDateRangeLimits(LocalDate.now(), null);
//        datePickerSetting.setAllowKeyboardEditing(false);
//        sessionDate.setSettings(datePickerSetting);

        timePickerSettings.setAllowEmptyTimes(false);
        timePickerSettings.setAllowKeyboardEditing(false);

    }

    private void populateFields() {
        txtTotalSeats.setText(String.valueOf(session.getCapacity()));
        txtSeatsAvailable.setText(String.valueOf(session.getRemaining()));
        txtAreaDescription.setText(session.getInfo());
        if(session.getStatus().equals("Active"))
        comboStatus.setSelectedIndex(0);
        else
              comboStatus.setSelectedIndex(1);

        //set date and time for session
        //LocalDate ld = new java.sql.Date(session.getDate().getTime()).toLocalDate();
        sessionDate.setDate(new java.sql.Date(session.getDate().getTime()).toLocalDate());
        startTime.setTime(session.getStartTime().toLocalTime());
        endTime.setTime(session.getEndTime().toLocalTime());

        for (Customer c : session.getRegisteredCustomerList()) {
            comboRegiesterdCustomers.addItem(c.getFirstName() + " " + c.getLastName());
        }

    }

    private void state(boolean state) {

        txtAreaDescription.setEditable(state);
        txtSeatsAvailable.setEditable(state);
        txtTotalSeats.setEditable(state);
        comboStatus.setEditable(state);
        sessionDate.setEnabled(state);
        startTime.setEnabled(state);
        endTime.setEnabled(state);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel20 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtTotalSeats = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtSeatsAvailable = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        comboRegiesterdCustomers = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        comboStatus = new javax.swing.JComboBox<>();
        btnUpdate = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaDescription = new javax.swing.JTextArea();
        jLabel24 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        sessionDate = new com.github.lgooddatepicker.components.DatePicker();
        jLabel25 = new javax.swing.JLabel();
        startTime = new TimePicker(timePickerSettings);
        endTime = new TimePicker(timePickerSettings);
        btnCancel = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel20.setText("Session Date");
        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 153, 0));

        jLabel10.setText("Total Seats");
        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 153, 0));

        txtTotalSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalSeatsActionPerformed(evt);
            }
        });
        txtTotalSeats.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTotalSeatsKeyPressed(evt);
            }
        });

        jLabel11.setText("Seats Available");
        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 153, 0));

        txtSeatsAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSeatsAvailableActionPerformed(evt);
            }
        });
        txtSeatsAvailable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSeatsAvailableKeyPressed(evt);
            }
        });

        jLabel21.setText("Registered Customers");
        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 153, 0));

        jLabel22.setText("Status");
        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 153, 0));

        comboStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Cancelled" }));
        comboStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboStatusActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.setBackground(new java.awt.Color(0, 153, 153));
        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setMaximumSize(new java.awt.Dimension(200, 200));
        btnUpdate.setMinimumSize(new java.awt.Dimension(200, 200));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.setBackground(new java.awt.Color(0, 153, 153));
        btnSave.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setMaximumSize(new java.awt.Dimension(200, 200));
        btnSave.setMinimumSize(new java.awt.Dimension(200, 200));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel23.setText("Start Time");
        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 153, 0));

        txtAreaDescription.setColumns(20);
        txtAreaDescription.setRows(5);
        jScrollPane1.setViewportView(txtAreaDescription);

        jLabel24.setText("Description");
        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 153, 0));

        jLabel12.setText("Session Id");
        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 153, 0));

        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });
        txtId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdKeyPressed(evt);
            }
        });

        jLabel25.setText("End Time");
        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 153, 0));

        btnCancel.setText("Cancel");
        btnCancel.setBackground(new java.awt.Color(0, 153, 153));
        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setMaximumSize(new java.awt.Dimension(200, 200));
        btnCancel.setMinimumSize(new java.awt.Dimension(200, 200));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtSeatsAvailable)
                                .addComponent(txtTotalSeats)
                                .addComponent(endTime, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                                .addComponent(startTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(comboRegiesterdCustomers, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(199, 199, 199)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel11)
                                        .addComponent(jLabel22)
                                        .addComponent(jLabel21)
                                        .addComponent(jLabel23)
                                        .addComponent(jLabel20)
                                        .addComponent(jLabel12)
                                        .addComponent(jLabel25)
                                        .addComponent(jLabel10)
                                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(comboStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jScrollPane1)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(sessionDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(225, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sessionDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(endTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotalSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSeatsAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(comboRegiesterdCustomers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(117, 117, 117))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtTotalSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalSeatsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalSeatsActionPerformed

    private void txtTotalSeatsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotalSeatsKeyPressed
        // TODO add your handling code here:
        int key = evt.getKeyCode();
        if ((key >= evt.VK_0 && key <= evt.VK_9) || (key >= evt.VK_NUMPAD0 && key <= evt.VK_NUMPAD9)) {
            txtTotalSeats.setEditable(false);
            txtTotalSeats.setBackground(Color.red);
        } else {
            txtTotalSeats.setEditable(true);
            txtTotalSeats.setBackground(Color.WHITE);

        }
    }//GEN-LAST:event_txtTotalSeatsKeyPressed

    private void txtSeatsAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSeatsAvailableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSeatsAvailableActionPerformed

    private void txtSeatsAvailableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSeatsAvailableKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSeatsAvailableKeyPressed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        state(true);
        btnSave.setEnabled(true);
        btnUpdate.setEnabled(false);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:

        if (Integer.parseInt(txtSeatsAvailable.getText()) > Integer.parseInt(txtTotalSeats.getText())) {
            JOptionPane.showMessageDialog(null, "Available seats cannot be greater than Total Seats");
        } else if (txtAreaDescription.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter Session Description");
        } //check for start n end date time
        else {

            if( java.sql.Time.valueOf(endTime.getTime()).after(java.sql.Time.valueOf(startTime.getTime()))){
                JOptionPane.showMessageDialog(null, "Start time and end time are invalid");
                
            }
            else if(!Utilities.isValidNumber(txtTotalSeats.getText())){
                 JOptionPane.showMessageDialog(null, "Number of seats must be a number!");
            }
            else{
            session.setStatus((String) comboStatus.getSelectedItem());
            session.setCapacity(Integer.parseInt(txtTotalSeats.getText()));
            session.setInfo(txtAreaDescription.getText());
            //set session time
            session.setStartTime(java.sql.Time.valueOf(startTime.getTime()));
            session.setEndTime(java.sql.Time.valueOf(endTime.getTime()));
            session.setDate(java.sql.Date.valueOf(sessionDate.getDate()));
           
            JOptionPane.showMessageDialog(null, "Session updated successfully");
            state(false);
            btnSave.setEnabled(false);
            btnUpdate.setEnabled(true);
            }
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void comboStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboStatusActionPerformed

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void txtIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdKeyPressed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        speakerSessionContainer.remove(this);
        Component[] componentArray = speakerSessionContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        AssignSpeakerSession assignSpeakerSession = (AssignSpeakerSession) component;
        assignSpeakerSession.populateTable();
        CardLayout layout = (CardLayout) speakerSessionContainer.getLayout();
        layout.previous(speakerSessionContainer);
    }//GEN-LAST:event_btnCancelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> comboRegiesterdCustomers;
    private javax.swing.JComboBox<String> comboStatus;
    private com.github.lgooddatepicker.components.TimePicker endTime;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JScrollPane jScrollPane1;
    private com.github.lgooddatepicker.components.DatePicker sessionDate;
    private com.github.lgooddatepicker.components.TimePicker startTime;
    private javax.swing.JTextArea txtAreaDescription;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtSeatsAvailable;
    private javax.swing.JTextField txtTotalSeats;
    // End of variables declaration//GEN-END:variables
}
